@import "../app.component.scss";

.score-container {
  $height: 25px;

  width: 60px;
  position: relative;
  display: inline-block;
  background: $game-container-background;
  padding: 15px 25px 20px 25px;
  font-size: $height;
  height: $height;
  line-height: $height + 22px;
  font-weight: bold;
  border-radius: $tile-border-radius;
  color: white;
  margin-top: 8px;
  text-align: center;

  &:after {
    position: absolute;
    width: 100%;
    top: 10px;
    left: 0;
    text-transform: uppercase;
    font-size: 13px;
    line-height: 13px;
    text-align: center;
    color: $tile-color;
    content: "Score";
  }
}

.gameover-overlay {
    position: absolute;
    top: 0;
    left: 0;
    background: rgba($tile-color, .5);
    width: $field-width;
    height: $field-width / 2 + 50px;
    border-radius: $tile-border-radius;

    padding: ($field-width / 2 - 50px) 0 0 0;
    text-align: center;
    font-size: 50px;
    color: $text-color;

    a{
      @include button;
      font-size: 25px;
    }
}

.game-container {
  margin-top: $game-container-margin-top;
  position: relative;
  padding: $grid-spacing;
  background: $game-container-background;
  border-radius: $tile-border-radius;
}

.row {
  display: flex;
  margin: 0 0 $grid-spacing 0;

  &:last-child{
      margin: 0;
  }
}

.tile {
  margin: 0 $grid-spacing 0 0;
  
  width: $tile-size;
  height: $tile-size;
  line-height: $tile-size;
  text-align: center;
  font-size: 50px;

  background:rgba($tile-color, .35);
  border-radius: $tile-border-radius;
  color: $text-color;

  &:last-child{
      margin: 0;
  }
}

$base: 2;
$exponent: 1;
$limit: 11;

@function pow($base, $exponent) {
  @return exponent($base, $exponent);
}

@mixin smaller($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@function exponent($base, $exponent) {
  // reset value
  $value: $base;
  // positive intergers get multiplied
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base; } }
  // negitive intergers get divided. A number divided by itself is 1
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base; } }
  // return the last value written
  @return $value;
}

// Colors for all 11 states, false = no special color
  $special-colors: false false, // 2
                   false false, // 4
                   #f78e48 true, // 8
                   #fc5e2e true, // 16
                   #ff3333 true, // 32
                   #ff0000 true, // 64
                   false true, // 128
                   false true, // 256
                   false true, // 512
                   false true, // 1024
                   false true; // 2048

 @while $exponent <= $limit {
    $power: pow($base, $exponent);

    .tile-#{$power} {
      // Calculate base background color
      $gold-percent: ($exponent - 1) / ($limit - 1) * 100;
      $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

      $nth-color: nth($special-colors, $exponent);

      $special-background: nth($nth-color, 1);
      $bright-color: nth($nth-color, 2);

      @if $special-background {
        $mixed-background: mix($special-background, $mixed-background, 55%);
      }

      @if $bright-color {
        color: $bright-text-color;
      }

      // Set background
      background: $mixed-background;

      // Add glow
      $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

      @if not $special-background {
        box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
                    inset 0 0 0 1px rgba(white, $glow-opacity / 3);
      }

      // Adjust font size for bigger numbers
      @if $power >= 100 and $power < 1000 {
        font-size: 45px;

        // Media queries placed here to avoid carrying over the rest of the logic
        @include smaller($mobile-threshold) {
          font-size: 25px;
        }
      } @else if $power >= 1000 {
        font-size: 35px;

        @include smaller($mobile-threshold) {
          font-size: 15px;
        }
      }
    }

    $exponent: $exponent + 1;
  }